name: Main

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Install Packages
        run: sudo apt install ffmpeg python3 -y && pip install -r requirements.txt

      # Runs a set of commands using the runners shell
      - name: install playerwright
        run: |
          python3 -m playwright install
          python3 -m playwright install-deps

      - name: git config
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Edit Toml
        uses: ciiiii/toml-editor@1.0.0
        with:
          file: "config.toml"
        # settings 
          key: "settings.allow_nsfw"
          value: "false"
          key: "settings.theme"
          value: "${{ secrets.USER_THEME }}"
          key: "settings.times_to_run"
          value: "${{ secrets.RUN }}"
          key: "settings.storymode"
          value: "true"
        # background 
          key: "settings.background.background_choice"
          value: "${{ secrets.BACKGROUND }}"
        # tss
          key: "settings.tts.choise"
          value: "${{ secrets.CHOISE }}"
          key: "settings.tts.aws_polly_voice"
          value: "${{ secrets.AWS }}"
          key: "settings.tts.streamlabs_polly_voice"
          value: "${{ secrets.STREAMLABS }}"
          key: "settings.tts.tiktok_voice"
          value: "$${{ secrets.TIKTOK_VOICE }}"
        # credentials
          key: "reddit.creds.client_id"
          value: "${{ secrets.CLIENT_ID }}"
          key: "reddit.creds.client_secret"
          value: "${{ secrets.CLIENT_SECRET }}"
          key: "reddit.creds.username"
          value: "${{ secrets.USERNAME }}"
          key: "reddit.creds.password"
          value: "${{ secrets.PASSWORD }}"
          key: "reddit.creds.2fa"
          value: "${{ secrets.2FA }}"
        # thread settings
          key: "reddit.thread.random"
          value: "true"
          key: "reddit.thread.subreddit"
          value: "${{ secrets.REDDIT }}"
          key: "reddit.thread.max_comment_length"
          value: "${{ secrets.MAX }}"
          key: "reddit.thread.post_lang"
          value: "${{ secrets.LANG }}"
          key: "reddit.thread.min_comments"
          value: "${{ secrets.MIN_COMMENTS }}"













      - name: run the program 
        run: python3 main.py
      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: üëç New reddit videos from $(date +%F)
